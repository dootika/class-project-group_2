mean(outs)
# DRUG ADDICT
retnum <- function(){
bottle <- array(1, 1e2)
score <- 0
while(TRUE){
foo <- sample(bottle,1)
if (foo == 1){
bottle[1e2] <- 0
score <- score + 1
}
else{
return(score + 1)
}
}
}
retnum()
# DRUG ADDICT
retnum <- function(){
bottle <- array(1, 1e2)
score <- 0
while(TRUE){
foo <- sample(bottle,1)
if (foo == 1){
bottle[1e2] <- 0
score <- score + 1
}
else{
return(score + 1)
}
}
}
retnum()
# DRUG ADDICT
retnum <- function(){
bottle <- array(1, 1e2)
score <- 0
while(TRUE){
foo <- sample(bottle,1)
if (foo == 1){
score <- score + 1
bottle[score] <- 0
}
else{
return(score + 1)
}
}
}
retnum()
# DRUG ADDICT
retnum <- function(){
bottle <- array(1, 1e2)
score <- 0
while(TRUE){
foo <- sample(bottle,1)
if (foo == 1){
score <- score + 1
bottle[score] <- 0
}
else{
return(score + 1)
}
}
}
retnum()
# MONTY HALL
MontyHall = function(){
door <- 1
win.door <- sample(1:3, 1)
if (door == win.door){
return(0)
}
else{return (1)}
}
outs <- array(NA,1e3)
for(i in 1:1e3){
outs[i] = MontyHall()
}
mean(outs)
library(rvest)
library(tidyverse)
library(dplyr)
html <- read_html("https://editorial.rottentomatoes.com/guide/best-netflix-movies-to-watch-right-now/")
movies <- html %>% html_elements(".article_movie_title") %>% html_text()
movies
movies <- html %>% html_elements(".article_movie_title.h2") %>% html_text()
movies
movies <- html %>% html_elements(".article_movie_title") %>% html_text()
movies
length("\n                          ")
movies <- substring(movies,15)
movies
movies <- substring(movies,5)
movies
movies <- substring(movies,5)
movies
movies <- substring(movies,5)
movies
movies <- substring(movies,1)
movies
movies <- substring(movies,1)
movies
movies <- substring(movies,2)
movies
movies <- html %>% html_elements(".article_movie_title.a") %>% html_text()
movies <- substring(movies,5)
movies
movies <- html %>% html_elements(".article_movie_title") %>% html_text()
movies[1]
substring(movies[1],16,length(movies[1])-15)
substring(movies[1],16,length(movies[1])-15)
length(movies[1])
substring(movies[1],16,nchar(movies[1])-15)
substring(movies[1],26,nchar(movies[1])-25)
substring(movies[1],31,nchar(movies[1])-25)
substring(movies[1],32,nchar(movies[1])-25)
substring(movies[1],26,nchar(movies[1])-25)
substring(movies[1],28,nchar(movies[1])-25)
?strsplit
names <- array(NA, dim = 100)
for(i in 1:length(movies)){
name<- substring(movies[i],28,nchar(movies[1])-25)
}
for(i in 1:length(movies)){
name<- substring(movies[i],28,nchar(movies[1])-25)
names[i] = name
}
names
strsplit(movies[1], " ")
names <- array(NA, dim = 100)
for(i in 1:length(movies)){
words <- strsplit(movies[1], " ")
for(word in words){
if (word != "" || word != "\n"){
print(word)
}
}
names[i] = name
}
for(i in 1:length(movies)){
words <- strsplit(movies[1], " ")
for(word in words){
if (word != "\n"){
print(word)
}
}
names[i] = name
}
for(i in 1:length(movies)){
words <- strsplit(movies[1], " ")
for(word in words){
if (TRUE){
print(word)
}
}
names[i] = name
}
for(i in 1:length(movies)){
words <- strsplit(movies[1], " ")
for(word in words){
if (!(word == "")){
print(word)
}
}
names[i] = name
}
for(i in 1:length(movies)){
words <- strsplit(movies[1], " ")
for(word in words){
if (!(nchar(word) == 1 && word == "")){
print(word)
}
}
names[i] = name
}
## Problem - 2
html <- read_html("https://en.wikipedia.org/wiki/United_States_at_the_Olympics")
## Problem - 2
html <- read_html("https://en.wikipedia.org/wiki/United_States_at_the_Olympics")
##Problem - 3
html <- read_html("https://stats.stackexchange.com/questions?tab=Votes")
questions <- html%>%html_elements(".s-post-summary--content")%>%html_text()
questions
questions <- html%>%html_elements(".s-post-summary--content.s-post-summary--content-title")%>%html_text()
questions
questions <- html%>%html_elements(".s-post-summary--content-title")%>%html_text()
questions
questions <- html%>%html_elements(".s-link")%>%html_text()
questions
questions <- questions[2:16]
questions
Votes <- html%>%html_elements(".s-post-summary--stats-item-number")%>%html_text()
votes
Votes
Votes_data <- html%>%html_elements(".s-post-summary--stats-item-number")%>%html_text()
Votes <- Votes_data[seq(1,length(Votes_data),3)]
Votes
Views <- Votes_data[seq(3,length(Votes_data),3)]
Views
Answers <- Votes_data[seq(2,length(Votes_data),3)]
Answers
starwars %>% slice(5:10)
starwars %>% slice_head(n = 3)
starwars %>% slice_sample(n = 5)
starwars %>% slice_sample(prop = 0.1)
starwars %>%
filter(!is.na(height)) %>%
slice_max(height, n = 3)
starwars %>% mutate(height_m = height / 100)
starwars %>% summarise(height = mean(height, na.rm = TRUE))
starwars
a1 <- group_by(starwars, species, sex)
a2 <- select(a1, height, mass)
a3 <- summarise(a2,
height = mean(height, na.rm = TRUE),
mass = mean(mass, na.rm = TRUE)
)
starwars %>%
group_by(species, sex) %>%
select(height, mass) %>%
summarise(
height = mean(height, na.rm = TRUE),
mass = mean(mass, na.rm = TRUE)
)
starwars
# SOLUTION-4
mtcars
# SOLUTION - 5
summarise(
select(
group_by(mtcars,cyl),
disp,hp
),
disp = mean(disp),
hp = mean(hp)
)
# Solution - 6
batting$Team
library(rvest)
library(tidyverse)
html <- read_html("https://bwf.tournamentsoftware.com/ranking/category.aspx?id=36352&category=473&C473FOC=&p=1&ps=100")
foo <- html %>% html_table()
foo <- foo[[1]]
foo <- foo[-101, -c(2,3,4,6)]
foo$Rank <- as.numeric(foo$Rank)
by_conf <- foo %>% group_by(Confederation)
MY.confed_summary <- by_conf %>%
summarize(Avg_rank = mean(Rank), number = n()) %>%
arrange(Avg_rank)
MY.confed_summary
foo[1]
foo <- html %>% html_table()
foo <- foo[[1]]
foo
foo <- foo[-101, -c(2,3,4,6)]
foo
foo$Rank <- as.numeric(foo$Rank)
by_conf <- foo %>% group_by(Confederation)
MY.confed_summary <- by_conf %>%
summarize(Avg_rank = mean(Rank), number = n()) %>%
arrange(Avg_rank)
View(MY.confed_summary)
library(rvest)
library(tidyverse)
# Solution - 1
html <- read_html("https://tldv.io/app/meetings/650ee24cbbbf63001332c3e7")
text <- html%>%html_elements(".sc-fYEEdK.kylWpz.transcript-word")
library(rvest)
library(tidyverse)
# Solution - 1
html <- read_html("https://tldv.io/app/meetings/650ee24cbbbf63001332c3e7")
text <- html%>%html_elements(".sc-fYEEdK")
text <- html%>%html_elements(".sc-fYEEdK")
text <- html%>%html_table()
install.packages("rcpp")
install.packages("Rcpp")
library(Rcpp)
clear
cppFunction("
int addC (x+y){
return x+y;
}
")
cppFunction("
int addC (int x, int y){
return x+y;
}
")
clear
addC(5,10)
addR = function(x,y){
return (x+y)
}
addR(5,10)
addC(5,10)
addR(5,10)
benchmark
?benchmark
benchmark(addR, addC)
library(rbenchmark)
benchmark(addR, addC)
benchmark(addR(5,10), addC(5,10))
func <- function(vec)
{
n <- length(vec)
sum.log <- log(prod(vec))
log.of.vec <- numeric(length(n))
frac <- log.of.vec/sum.log
return(frac)
}
clear
func1 <- function(vec)
{
n <- length(vec)
sum.log <- log(prod(vec))
log.of.vec <- numeric(length(n))
frac <- log.of.vec/sum.log
return(frac)
}
func2 <- function(vec)
{
n <- length(vec)
# for tracking sum and log
sum.log <- 0
log.of.vec <- numeric(length(n))
# calculating logs and sum for each element
for(i in 1:n)
{
log.of.vec[i] <- log(vec[i])
sum.log <- sum.log + log.of.vec[i]
}
# fraction
frac <- log.of.vec/sum.log
return(frac)
}
func1(1:1e4)
func2(1:1e4)
cppFunction("
NumericVector funcC (NumericVector x){
double track = 0;
int n = x.size();
NumericVector logx = x;
NumericVector ret = x;
for(int i=0; i<n; i++){
logx[i] = log(x[i]);
track += log(x[i]);
}
for(int j=0; j<n; j++){
rtn[j] = logx[j]/track;
}
return rtn;
}
")
cppFunction("
NumericVector funcC (NumericVector x){
double track = 0;
int n = x.size();
NumericVector logx = x;
NumericVector rtn = x;
for(int i=0; i<n; i++){
logx[i] = log(x[i]);
track += log(x[i]);
}
for(int j=0; j<n; j++){
rtn[j] = logx[j]/track;
}
return rtn;
}
")
vec <- 1:10
all.equal(funcR(vec), funcC(vec))
funcR <- function(vec)
{
temp <- log(vec)
return(temp/sum(temp))
}
vec <- 1:10
all.equal(funcR(vec), funcC(vec))
vec <- 1:1e5
benchmark(func(vec), funcR(vec), funcC(vec))
x <- matrix(1:10, ncol = 2, nrow = 5)
y <- matrix(seq(2, 20, by = 2), ncol = 2, nrow = 5)
cppFunction("
NumericMatrix addC(NumericMatix x,NumericMatix y ){
int n = x.nrow()
int m = y.ncol()
NumericMatrix out(n,m);
for(int i=0; i<n; i++){
for(int j=0, j<m , j++){
out(i,j) = x(i,j) + y(i,j)
}
}
return out;
}
")
library(Rcpp)
x <- matrix(1:10, ncol = 2, nrow = 5)
y <- matrix(seq(2, 20, by = 2), ncol = 2, nrow = 5)
cppFunction("
NumericMatrix addC(NumericMatix x,NumericMatix y ){
int n = x.nrow()
int m = y.ncol()
NumericMatrix out(n,m);
for(int i=0; i<n; i++){
for(int j=0, j<m , j++){
out(i,j) = x(i,j) + y(i,j)
}
}
return out;
}
")
cppFunction("
NumericMatrix addC(NumericMatix x,NumericMatix y ){
int n = x.nrow()
int m = y.ncol()
NumericMatrix out(n,m);
for(int i=0; i<n; i++){
for(int j=0, j<m , j++){
out(i,j) = x(i,j) + y(i,j);
}
}
return out;
}
")
cppFunction("
NumericMatrix addC(NumericMatix x,NumericMatix y ){
int n = x.nrow();
int m = y.ncol();
NumericMatrix out(n,m);
for(int i=0; i<n; i++){
for(int j=0, j<m , j++){
out(i,j) = x(i,j) + y(i,j);
}
}
return out;
}
")
cppFunction("
NumericMatrix addC(NumericMatix x,NumericMatix y ){
int n = x.nrow();
int m = y.ncol();
NumericMatrix out(n,m);
for(int i=0; i<n; i++){
for(int j=0; j<m; j++){
out(i,j) = x(i,j) + y(i,j);
}
}
return out;
}
")
cppFunction("
NumericMatrix addC(NumericMatrix x,NumericMatrix y ){
int n = x.nrow();
int m = y.ncol();
NumericMatrix out(n,m);
for(int i=0; i<n; i++){
for(int j=0; j<m; j++){
out(i,j) = x(i,j) + y(i,j);
}
}
return out;
}
")
addC(x,y)
shiny::runApp('MTH208/class-project-group_2/Group-2_Anime_Project')
shiny::runApp('MTH208/class-project-group_2/Group-2_Anime_Project')
setwd("~/MTH208/class-project-group_2/Group-2_Anime_Project")
MainData <- read.csv("../Finaldata.csv")
ggplot(MainData,
mapping = aes(Score),
)+
geom_boxplot(mapping = aes(col = Type))
runApp()
subdata <- subset(MainData, MainData$Genre == "Action")
ggplot(subdata,
mapping = aes(Score),
)+
geom_boxplot(mapping = aes(col = MainCol))
for(i in 1:1e3){
ind = which.max(c(MainData$Percent.red[i],MainData$Percent.green[i],MainData$Percent.blue[i]))
MainData$MainCol[i] <- c("Red","Green","Blue")[ind]
}
ggplot(subdata,
mapping = aes(Score),
)+
geom_boxplot(mapping = aes(col = MainCol))
subdata <- subset(MainData, MainData$Genre == "Action")
ggplot(subdata,
mapping = aes(Score),
)+
geom_boxplot(mapping = aes(col = MainCol))
subdata <- subset(MainData, MainData$Genre == "Comedy")
ggplot(subdata,
mapping = aes(Score),
)+
geom_boxplot(mapping = aes(col = MainCol))
subdata <- subset(MainData, MainData$Genre == "Drama")
ggplot(subdata,
mapping = aes(Score),
)+
geom_boxplot(mapping = aes(col = MainCol))
subdata <- subset(MainData, MainData$Genre == "Horror")
ggplot(subdata,
mapping = aes(Score),
)+
geom_boxplot(mapping = aes(col = MainCol))
View(MainData)
subdata <- subset(MainData, MainData$Genre == "Comedy")
ggplot(subdata,
mapping = aes(Score),
)+
geom_boxplot(mapping = aes(col = MainCol))
